// Copied from the documentation: MINDSTORMS_EV3_Firmware_Developer_Kit.pdf

// tslint:disable: object-literal-sort-keys
export default Object.freeze({
    // 4.1 General operations
    error: 0x00,
    nop: 0x01,
    programStop: 0x02,
    programStart: 0x03,
    objectStop: 0x04,
    objectStart: 0x05,
    objectTrig: 0x06,
    objectWait: 0x07,
    return: 0x08,
    call: 0x09,
    objectEnd: 0x0a,
    sleep: 0x0b,
    programInfo: 0x0c,
    label: 0x0d,
    probe: 0x0e,
    do: 0x0f,
    bp0: 0x88,
    bp1: 0x89,
    bp2: 0x8a,
    bp3: 0x8b,
    pbSet: 0x8c,
    random: 0x8e,
    info: 0x7c,
    string: 0x7d,
    memoryWrite: 0x7e,
    memoryRead: 0x7f,
    portCnvOutput: 0x61,
    // in docs portCnvInput is 0x61, but most probably typo
    portCnvInput: 0x62,
    noteToFreq: 0x63,
    system: 0x60,
    // 4.2 Math instructions
    add8: 0x10,
    add16: 0x11,
    add32: 0x12,
    addF: 0x13,
    sub8: 0x14,
    sub16: 0x15,
    sub32: 0x16,
    subF: 0x17,
    mul8: 0x18,
    mul16: 0x19,
    mul32: 0x1a,
    mulF: 0x1b,
    div8: 0x1c,
    div16: 0x1d,
    div32: 0x1e,
    divF: 0x1f,
    math: 0x8d,
    // 4.3 Logic operations
    or8: 0x20,
    or16: 0x21,
    or32: 0x22,
    and8: 0x24,
    and16: 0x25,
    and32: 0x26,
    xor8: 0x28,
    xor16: 0x29,
    xor32: 0x2a,
    rl8: 0x2c,
    rl16: 0x2d,
    rl32: 0x2e,
    // 4.4 Memory move oprations
    initBytes: 0x2f,
    move8_8: 0x30,
    move8_16: 0x31,
    move8_32: 0x32,
    move8_f: 0x33,
    move16_8: 0x34,
    move16_16: 0x35,
    move16_32: 0x36,
    move16_f: 0x37,
    move32_8: 0x38,
    move32_16: 0x39,
    move32_32: 0x3a,
    move32_f: 0x3b,
    movef_8: 0x3c,
    movef_16: 0x3d,
    movef_32: 0x3e,
    movef_f: 0x3f,
    read8: 0xc8,
    read16: 0xc9,
    read32: 0xca,
    readf: 0xcb,
    write8: 0xcc,
    write16: 0xcd,
    write32: 0xce,
    writef: 0xcf,
    // 4.5 Program branch operations
    jr: 0x40,
    jr_false: 0x41,
    jr_true: 0x42,
    jr_nan: 0x43,
    jr_lt8: 0x64,
    jr_lt16: 0x65,
    jr_lt32: 0x66,
    jr_ltf: 0x67,
    jr_gt8: 0x68,
    jr_gt16: 0x69,
    jr_gt32: 0x6a,
    jr_gtf: 0x6b,
    jr_eq8: 0x6c,
    jr_eq16: 0x6d,
    jr_eq32: 0x6e,
    jr_eqf: 0x6f,
    jr_neq8: 0x70,
    jr_neq16: 0x71,
    jr_neq32: 0x72,
    jr_neqf: 0x73,
    jr_lteq8: 0x74,
    jr_lteq16: 0x75,
    jr_lteq32: 0x76,
    jr_lteqF: 0x77,
    jr_gteq8: 0x78,
    jr_gteq16: 0x79,
    jr_gteq32: 0x7a,
    jr_gteqf: 0x7b,
    // 4.6 Comparison operations
    cp_lt8: 0x44,
    cp_lt16: 0x45,
    cp_lt32: 0x46,
    cp_ltf: 0x47,
    cp_gt8: 0x48,
    cp_gt16: 0x49,
    cp_gt32: 0x4a,
    cp_gtf: 0x4b,
    cp_eq8: 0x4c,
    cp_eq16: 0x4d,
    cp_eq32: 0x4e,
    cp_eqf: 0x4f,
    cp_neq8: 0x50,
    cp_neq16: 0x51,
    cp_neq32: 0x52,
    cp_neqf: 0x53,
    cp_lteq8: 0x54,
    cp_lteq16: 0x55,
    cp_lteq32: 0x56,
    cp_lteqf: 0x57,
    cp_gteq8: 0x58,
    cp_gteq16: 0x59,
    cp_gteq32: 0x5a,
    cp_gteqf: 0x5b,
    // 4.7 Program select operations
    select8: 0x5c,
    select16: 0x5d,
    select32: 0x5e,
    selectf: 0x5f,
    // 4.8 Input port operations
    inputDeviceList: 0x98,
    inputDevice: 0x99,
    inputRead: 0x9a,
    inputTest: 0x9b,
    inputReady: 0x9c,
    inputReadSI: 0x9d,
    inputReadExt: 0x9e,
    inputWrite: 0x9f,
    // 4.9 Output port operations
    outputSetType: 0xa1,
    outputReset: 0xa2,
    outputStop: 0xa3,
    outputPower: 0xa4,
    outputSpeed: 0xa5,
    outputStart: 0xa6,
    outputPolarity: 0xa7,
    outputRead: 0xa8,
    outputTest: 0xa9,
    outputReady: 0xaa,
    outputStepPower: 0xac,
    outputTimePower: 0xad,
    outputStepSpeed: 0xae,
    outputTimeSpeed: 0xaf,
    outputStepSync: 0xb0,
    outputTimeSync: 0xb1,
    outputClrCount: 0xb2,
    outputGetCount: 0xb3,
    outputPrgStop: 0xb4,
    // 4.10 Sound operations
    sound: 0x94,
    soundTest: 0x95,
    soundReady: 0x96,
    // 4.11 Timer operations
    timerWait: 0x85,
    timerReady: 0x86,
    timerRead: 0x87,
    timerReadUs: 0x8f,
    // 4.13 Communication operations
    comReady: 0xd0,
    comTest: 0xd1,
    comRead: 0x91,
    comWrite: 0x92,
    mailboxOpen: 0xd0,
    mailboxWrite: 0xd9,
    mailboxRead: 0xda,
    mailboxTest: 0xdb,
    mailboxReady: 0xdc,
    mailboxClose: 0xdd,
    comGet: 0xd3,
    comSet: 0xd4,
    // 4.14 Memory operations
    file: 0xc0,
    array: 0xc1,
    arrayWrite: 0xc2,
    arrayRead: 0xc3,
    arrayAppend: 0xc4,
    memorUsage: 0xc5,
    filename: 0xc6,
    // 4.15 User interface operations
    uiDraw: 0x84,
    uiFlush: 0x80,
    uiRead: 0x81,
    uiWrite: 0x82,
    uiButton: 0x83,
    keepAlive: 0x90,
});
